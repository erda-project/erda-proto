syntax = "proto3";

package erda.msp.resource;
option go_package = "github.com/erda-project/erda-proto-go/msp/scope/pb";
import "google/api/annotations.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";
import "google/protobuf/descriptor.proto";

service MicroserviceScopeService {
  rpc EncryptMicroserviceScope(EncryptMicroserviceScopeRequest) returns (EncryptMicroserviceScopeResponse) {
    option (google.api.http) = {
      get: "/api/msp/scope/encrypt?projectId={projectID}"
    };
  }

  rpc DecryptMicroserviceScope(DecryptMicroserviceScopeRequest) returns (DecryptMicroserviceScopeResponse) {
    option (google.api.http) = {
      get: "/api/msp/scope/decrypt?scopeId={scopeID}"
    };
  }
}

message EncryptMicroserviceScopeRequest {
  string projectID = 1 [(validator.field) = {string_not_empty: true}];
  string env       = 2 [(validator.field) = {string_not_empty: true}];
}

message EncryptMicroserviceScopeResponse {
  Scope scope = 1;
}

message DecryptMicroserviceScopeRequest {
  string scopeID = 1 [(validator.field) = {string_not_empty: true}];
}

message DecryptMicroserviceScopeResponse {
  Scope scope = 1;
}

// Differentiate the actual deployment environment of the service and addon
message Scope {
  string id        = 1;
  string projectID = 2 [json_name = "projectId"];
  string env       = 3;
}